#@package _global_
handlers:
  train:  # need to copy these when overriding
  # TODO: Set up to merge these rather than replace
    - _target_: monai.handlers.CheckpointSaver
      _convert_: partial
      _requires_: [save_dict, save_dir]
      save_final: true
      final_filename: "final_model.pth"
      save_key_metric: false
      epoch_level: true
      save_interval: 5
      n_saved: 5
    - _target_: monai.handlers.ValidationHandler
      _requires_: validator
      interval: ${eval_every_epochs} # validate every epoch
      epoch_level: true # validate at the end of each epoch
      exec_at_start: true
    - _target_: monai.handlers.StatsHandler
      iteration_log: ${log_every_iters}
      epoch_log: false
      tag_name: "train loss"
    - _target_: monai.handlers.TensorBoardStatsHandler
      _requires_: [summary_writer]
      iteration_log: ${log_every_iters}
      epoch_log: true
      tag_name: "Train Loss"
    - _target_: ignite.handlers.ProgressBar
      desc: "Training"
  validation:
    - _target_: monai.handlers.CheckpointSaver
      _convert_: partial
      _requires_: [save_dict, save_dir]
      save_final: false
      save_key_metric: true
      epoch_level: true
      save_interval: 5
      key_metric_n_saved: 1
      key_metric_greater_or_equal: true
    - _target_: monai.handlers.StatsHandler
      iteration_log: false
      epoch_log: true
      tag_name: "Validation"
    - _target_: monai.handlers.TensorBoardImageHandler
      _requires_: summary_writer
      epoch_level: true
      interval: 1
      index: 0
      frame_dim: -1
      max_channels: 3  # allows exporting as video iso gif
      batch_transform:
        _target_: ignition.utils.from_engine_with_transform
        keys: ['image', 'label']  # keys to extract from the batch
        first: false
        transform:
          _target_: monai.transforms.Compose
          unpack_items: false
          transforms:
            - _target_: monai.transforms.ScaleIntensityd
              # maps percentiles to range [0,1]
              keys: ['image']
              minv: 0.0
              maxv: 1.0
            - _target_: monai.transforms.ScaleIntensityRanged
              keys: ['label']
              # maps percentiles to range [0,1]
              a_min: 0.0
              a_max: ${math:"${num_classes} - 1"}
              b_min: 0.0
              b_max: 1.0
      output_transform:
        _target_: ignition.utils.from_engine_with_transform
        keys: ['pred']  # keys to extract from the output
        first: false
        transform:
          _target_: monai.transforms.Compose
          unpack_items: false
          transforms:
            - _target_: monai.transforms.Activationsd
              keys: ['pred']
              softmax: true
            - _target_: monai.transforms.AsDiscreted
              keys: ['pred']
              argmax: true
              to_onehot: null
              include_background: true
            - _target_: monai.transforms.ScaleIntensityRanged
              keys: ['pred']
              # maps percentiles to range [0,1]
              a_min: 0.0
              a_max: ${math:"${num_classes} - 1"}
              b_min: 0.0
              b_max: 1.0
  checkpoint_loader:
    _target_: monai.handlers.CheckpointLoader
    _convert_: all
    _requires_: [load_dict, load_path]
  